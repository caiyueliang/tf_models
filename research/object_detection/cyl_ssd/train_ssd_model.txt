=========================================================================================================================================
1.Tensorflow及Object detection API相关环境的搭建安装
https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md

=========================================================================================================================================
2.准备输入数据，数据转换为tfrecord格式：（需要改--data_dir路径，参考代码object_detection/dataset_tools/create_pascal_tf_record.py）
wget http://host.robots.ox.ac.uk/pascal/VOC/voc2012/VOCtrainval_11-May-2012.tar
tar -xvf VOCtrainval_11-May-2012.tar

python object_detection/dataset_tools/create_pascal_tf_record.py \
    --label_map_path=object_detection/data/pascal_label_map.pbtxt \
    --data_dir=/home/lijc08/deeplearning/Data/VOCtrainval_11-May-2012/VOCdevkit --year=VOC2012 --set=train \
    --output_path=pascal_train.record

python object_detection/dataset_tools/create_pascal_tf_record.py \
    --label_map_path=object_detection/data/pascal_label_map.pbtxt \
    --data_dir=/home/lijc08/deeplearning/Data/VOCtrainval_11-May-2012/VOCdevkit --year=VOC2012 --set=val \
    --output_path=pascal_val.record

生成两个文件：pascal_train.record，pascal_val.record；
标签文件：object_detection/data/pascal_label_map.pbtxt；

=========================================================================================================================================
3.修改pipeline.config

=========================================================================================================================================
4.开始训练
PIPELINE_CONFIG_PATH="/home/lijc08/deeplearning/tf_models/research/object_detection/cyl_ssd/ssd_mobilenet_v1_quantized_pascal.config"
MODEL_DIR="/home/lijc08/deeplearning/tf_models/research/object_detection/cyl_ssd/checkpoints/"
NUM_TRAIN_STEPS=200000
SAMPLE_1_OF_N_EVAL_EXAMPLES=1
python object_detection/model_main.py \
    --pipeline_config_path=${PIPELINE_CONFIG_PATH} \
    --model_dir=${MODEL_DIR} \
    --num_train_steps=${NUM_TRAIN_STEPS} \
    --sample_1_of_n_eval_examples=$SAMPLE_1_OF_N_EVAL_EXAMPLES \
    --alsologtostderr

训练人脸检测模型：用wider数据
PIPELINE_CONFIG_PATH="/home/lijc08/deeplearning/tf_models/research/object_detection/cyl_ssd/ssd_mobilenet_v1_quantized_wider.config"
MODEL_DIR="/home/lijc08/deeplearning/tf_models/research/object_detection/cyl_ssd/checkpoints/"
NUM_TRAIN_STEPS=50000
SAMPLE_1_OF_N_EVAL_EXAMPLES=1
python object_detection/model_main.py \
    --pipeline_config_path=${PIPELINE_CONFIG_PATH} \
    --model_dir=${MODEL_DIR} \
    --num_train_steps=${NUM_TRAIN_STEPS} \
    --sample_1_of_n_eval_examples=$SAMPLE_1_OF_N_EVAL_EXAMPLES \
    --alsologtostderr

PIPELINE_CONFIG_PATH="./object_detection/cyl_ssd/ssd_mobilenet_v1_quantized_wider.config"
MODEL_DIR="./object_detection/cyl_ssd/ssd_v1_checkpoints/"
NUM_TRAIN_STEPS=50000
SAMPLE_1_OF_N_EVAL_EXAMPLES=1
python object_detection/model_main.py \
    --pipeline_config_path=${PIPELINE_CONFIG_PATH} \
    --model_dir=${MODEL_DIR} \
    --num_train_steps=${NUM_TRAIN_STEPS} \
    --sample_1_of_n_eval_examples=$SAMPLE_1_OF_N_EVAL_EXAMPLES \
    --alsologtostderr

PIPELINE_CONFIG_PATH="./object_detection/cyl_ssd/ssd_mobilenet_v2_quantized_wider.config"
MODEL_DIR="./object_detection/cyl_ssd/ssd_v2_checkpoints/"
NUM_TRAIN_STEPS=200000
SAMPLE_1_OF_N_EVAL_EXAMPLES=1
python object_detection/model_main.py \
    --pipeline_config_path=${PIPELINE_CONFIG_PATH} \
    --model_dir=${MODEL_DIR} \
    --num_train_steps=${NUM_TRAIN_STEPS} \
    --sample_1_of_n_eval_examples=$SAMPLE_1_OF_N_EVAL_EXAMPLES \
    --alsologtostderr

=========================================================================================================================================
可视化
tensorboard --logdir="/home/lijc08/deeplearning/tf_models/research/object_detection/cyl_ssd/ssd_v1_checkpoints/"
tensorboard --logdir="/home/lijc08/deeplearning/tf_models/research/object_detection/cyl_ssd/ssd_v2_checkpoints/"


=========================================================================================================================================
转换
python object_detection/export_tflite_ssd_graph.py \
--pipeline_config_path="./object_detection/cyl_ssd/ssd_mobilenet_v2_quantized_wider.config" \
--trained_checkpoint_prefix="./object_detection/cyl_ssd/ssd_v2_checkpoints/model.ckpt-37977" \
--output_directory="/tmp/tflite" \
--add_postprocessing_op=true



=========================================================================================================================================
=========================================================================================================================================
=========================================================================================================================================
1.https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/installation.md
Tensorflow及Object detection API相关环境的搭建安装

2.预训练模型可以在tensorflow object detection的model zoo中下载
https://github.com/tensorflow/models/blob/master/research/object_detection/g3doc/detection_model_zoo.md

3.人脸数据集可以采用WIDER FACE数据集，下载好后利用脚本将图像及标注信息转换为tfrecord格式供训练使用。

4.research路径找到对应模型的config文件object_detection/samples/configs/ssd_mobilenet_v1_0.75_depth_quantized_300x300_pets_sync.config
修改其中tfrecord及label的路径基于checkpoint路径后开始训练模型

5.训练代码：research/object_detection/legacy/train.py
python train.py \
        --logtostderr \
        --train_dir=/home/kai/tensorflow/face/ \
        --pipeline_config_path=/home/kai/tensorflow/face/ssd_mobilenet_v1_0.75_depth_quantized_300x300_pets_sync.config
		
6.首先需要将checkpoint转换为Tensorflow lite可用的pb文件
python object_detection/export_tflite_ssd_graph.py \
--pipeline_config_path=$CONFIG_FILE \
--trained_checkpoint_prefix=$CHECKPOINT_PATH \
--output_directory=$OUTPUT_DIR \
--add_postprocessing_op=true

7.得到tflite_graph.pb后需要利用TOCO将pb模型转换为.tflite模型
bazel run -c opt tensorflow/contrib/lite/toco:toco -- \
--input_file=$OUTPUT_DIR/tflite_graph.pb \
--output_file=$OUTPUT_DIR/detect.tflite \
--input_shapes=1,300,300,3 \
--input_arrays=normalized_input_image_tensor \
--output_arrays='TFLite_Detection_PostProcess','TFLite_Detection_PostProcess:1','TFLite_Detection_PostProcess:2','TFLite_Detection_PostProcess:3'  \
--inference_type=QUANTIZED_UINT8 \
--mean_values=128 \
--std_values=128 \
--change_concat_input_ranges=false \
--allow_custom_ops














